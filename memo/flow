# parsing 순서 (ft_parsing)

    [ 1차 파싱]
    1. 명령문 작성후 enter -> gnl
    2. 명령문들을 단어 들로 분리
        quote 처리 해주고 quote 문자는 2차 파싱에서 제거해줄 것임
    3. single quote 가 아닐 경우 \ 문자를 만날때
        \ 문자이후 다음 문자가 존재하는지 확인
            일단 \뒤에 있는 문자도 넣어주기
            double quote 된 단어 안에서 \" 있을 경우 quote 개수가 홀수 가 안되도록 처리해주기
            
    3. 명령어 별로 정리하여 리스트로 생성

# 명령어 실행 (controller)

        [ 2차 파싱 ] - 각 명령어 별로 실행
        1. 각 리스트에서 순서대로 실행
        2. $ 처리
            "" 안에 있을 경우 단어 분리 안됨
            '' 안에 있을 경우 $ 그대로 됨
            없을 경우 단어분리됨 (하나만 딱 있을 경우)
        3. escape 처리
            quote 안에 있는 경우
                ' ' : escape 처리 안함
                " " : escpae 처리
            quote 안에 없는 경우
                escape 처리
            
            escpae 처리하는 법
                \ 문자 있음 : 일반 문자로 처리하고 \ 삭제후 \ 뒤 문자 버퍼에 넣어주기
                \ 문자 없음 : 버퍼에 바로 넣어주기
        4. quote 제거


        ""
            ", $, `, \, newline 문자들도 \ escape 가 적용된다.
        ''
            모든 문자 있는 그대로
        no quote
            \ escape 처리 돼어있음
            $ 처리만 해줄것
    [ 실행 ]
    1. flag 확인
        1-1. pipe 인경우
                명령어들을 동시에 실행시켜야한다.
                | 가 아닐때까지 명령어들을 찾아서 동시에 실행시켜야할듯?

                명령어가 빌트인인지 외부명령인지 확인한다.
                    빌트인      : 내부 명령 실행
                    외부명령    : execve

        1-2. ; 인 경우
            명령어 실행하면됨
        1-3. redirection
            (입력0) 왼쪽  <   오른쪽
            (출력1) 왼쪽  >   오른쪽 
            (출력1) 왼쪽  >>  오른쪽

                왼쪽 은 fd, 오른쪽은 fd 또는 파일이름 을 넣어줘야한다.
                ex.
                    wc 0< infile 1> outfile
                    
                    >, >, >> 기호의 좌측값은 공백 없이 붙여야한다. 붙이지 않을 경우 인수로 생각

                redirection 기호를 사용할때 fd 번호를 적어줘야 하는데 적지 않을 경우
                standard stream 으로 사용된다.
                    < 기호는 입력이므로 좌측값을 0 을 기본값
                    >, >> 기호는 출력이므로 좌측값을 1을 기본값으로 한다.

            
    2. 명령어 확인
        builtin
            프로세스 새로 생성 안해줘도됨
        외부 명령
            프로세스 생성해줘야함
        나머지
            bash: "something": command not found


	/*i
	  입력받는 무한루프
	  	입력받기
		  어떤 명령어인지
		  		프로세스를 만들어야 한다.
					1. |
					2. 외부 프로그램
				안만들어도 됨
					1. | 없음
					2. 

	1. 프롬프트에서 명령문을 작성한후 enter 키
	2. 명령문을 token(단어) 로 분리
	3. 해석해야할 표현식이 있는 경우
		변수확장
		산술확장
		명령치환
	4. 최종 명령문 완성
	5. 불필요한 quote 삭제처리
	*/